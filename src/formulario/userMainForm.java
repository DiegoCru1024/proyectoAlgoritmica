/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package formulario;

import clases.mascotaArray;
import clases.mascotaClase;
import com.google.gson.Gson;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.io.FileUtils;
import org.json.simple.JSONObject;

/**
 *
 * @author Diego
 */
public final class userMainForm extends javax.swing.JFrame {

    /**
     * Creates new form userMainForm
     *
     * @param userObject
     */
    //Declaran los arrays
    mascotaArray mascotasArray = new mascotaArray();

    JSONObject userObject = null;
    String selection = "no-selection";

    public userMainForm(JSONObject userObject) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.userObject = userObject;
        lbl_welcome.setText("Bienvenido: " + this.userObject.get("name"));

        //Limpiamos la tabla al iniciar
        DefaultTableModel tableModel = new DefaultTableModel();
        tableMain.setModel(tableModel);

        //Inicializamos los arrays
        mascotasArray.generarArreglo();

        //Cargamos datos
        cargarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_welcome = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btn_mascotas = new javax.swing.JButton();
        btn_citas = new javax.swing.JButton();
        btn_inyecciones = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMain = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btn_agregar = new javax.swing.JButton();
        btn_modificar = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(225, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 50, 255), 2));

        lbl_welcome.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbl_welcome.setText("Bienvenido: Usuario");

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        btn_mascotas.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_mascotas.setText("Mascotas");
        btn_mascotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mascotasActionPerformed(evt);
            }
        });

        btn_citas.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_citas.setText("Citas");
        btn_citas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_citasActionPerformed(evt);
            }
        });

        btn_inyecciones.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_inyecciones.setText("Vacunas");
        btn_inyecciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inyeccionesActionPerformed(evt);
            }
        });

        jButton1.setText("TEST: Borrar Memoria");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_mascotas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_citas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_inyecciones, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_mascotas, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(btn_citas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_inyecciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tableMain.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tableMain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableMain);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        btn_agregar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_agregar.setText("Agregar");
        btn_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregarActionPerformed(evt);
            }
        });

        btn_modificar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_modificar.setText("Modificar");
        btn_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton6.setText("Salir");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        btn_eliminar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_agregar, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(btn_modificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbl_welcome, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_welcome, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_mascotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mascotasActionPerformed
        // TODO add your handling code here:
        selection = "mascotas";
        definirTablaMascotas();
    }//GEN-LAST:event_btn_mascotasActionPerformed

    private void btn_citasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_citasActionPerformed
        // TODO add your handling code here:
        definirTablaCitas();
        selection = "citas";
    }//GEN-LAST:event_btn_citasActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        guardarDatos();
        System.exit(0);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void btn_inyeccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inyeccionesActionPerformed
        // TODO add your handling code here:
        definirTablaVacunas();
        selection = "vacunas";
    }//GEN-LAST:event_btn_inyeccionesActionPerformed

    private void btn_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregarActionPerformed
        // TODO add your handling code here:
        switch (selection) {
            case "mascotas" -> {
                registrarMascota registro = new registrarMascota(this, mascotasArray);
                registro.setVisible(true);
            }
            case "citas" -> {
            }
            case "vacunas" -> {
            }
            default -> {
                JOptionPane.showMessageDialog(this, "Seleccione primero una opcion....", "Confirmacion", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_agregarActionPerformed

    private void btn_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarActionPerformed
        // TODO add your handling code here:
        switch (selection) {
            case "mascotas" -> {
                if (tableMain.getSelectedRow() != -1) {
                    int codigo = (int) tableMain.getModel().getValueAt(tableMain.getSelectedRow(), 0);
                    mascotaClase mascotaModificar = mascotasArray.buscarCodigo(codigo);

                    modificarMascota modificar = new modificarMascota(this, mascotaModificar);
                    modificar.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Seleccione una mascota a modificar...", "Confirmacion", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            case "citas" -> {
            }
            case "vacunas" -> {
            }
            default -> {
                JOptionPane.showMessageDialog(this, "Seleccione primero una opcion....", "Confirmacion", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_modificarActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        // TODO add your handling code here:
        switch (selection) {
            case "mascotas" -> {
                if (tableMain.getSelectedRow() != -1) {
                    int codigo = (int) tableMain.getModel().getValueAt(tableMain.getSelectedRow(), 0);
                    mascotaClase mascotaEliminar = mascotasArray.buscarCodigo(codigo);

                    eliminarMascota eliminar = new eliminarMascota(this, mascotaEliminar, mascotasArray);
                    eliminar.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Seleccione una mascota a eliminar...", "Confirmacion", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            case "citas" -> {
            }
            case "vacunas" -> {
            }
            default -> {
                JOptionPane.showMessageDialog(this, "Seleccione primero una opcion....", "Confirmacion", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        File myObj = new File("./data/mascotasData.json");
        mascotasArray = new mascotaArray();
        guardarDatos();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void definirTablaMascotas() {
        String[] tableHeaders = {"Codigo", "Dueño", "Nombre", "Raza", "Color", "Edad", "Peso"};
        DefaultTableModel tableModel = new DefaultTableModel();

        for (String header : tableHeaders) {
            tableModel.addColumn(header);
        }

        for (int i = 0; i < mascotasArray.getSize(); i++) {
            tableModel.addRow(new Object[]{""});
        }
        tableMain.setModel(tableModel);

        if (mascotasArray.getSize() > 0) {
            for (int i = 0; i < mascotasArray.getSize(); i++) {
                mascotaClase m = mascotasArray.getMascota(i);
                tableMain.setValueAt(m.getCodigo(), i, 0);
                tableMain.setValueAt(m.getDueño(), i, 1);
                tableMain.setValueAt(m.getNombre(), i, 2);
                tableMain.setValueAt(m.getRaza(), i, 3);
                tableMain.setValueAt(m.getColor(), i, 4);
                tableMain.setValueAt(m.getEdad(), i, 5);
                tableMain.setValueAt(m.getPeso(), i, 6);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No hay mascotas registradas...", "Confirmación", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    public void definirTablaCitas() {
        String[] tableHeaders = {"Dueño", "Nombre", "Raza", "Fecha Programada", "Motivo de cita"};
        DefaultTableModel tableModel = new DefaultTableModel();

        for (String header : tableHeaders) {
            tableModel.addColumn(header);
        }

        tableMain.setModel(tableModel);
    }

    public void definirTablaVacunas() {
        String[] tableHeaders = {"Dueño", "Nombre", "Raza", "Edad", "Fecha Programada", "Vacuna Programada"};
        DefaultTableModel tableModel = new DefaultTableModel();

        for (String header : tableHeaders) {
            tableModel.addColumn(header);
        }

        tableMain.setModel(tableModel);
    }

    public void cargarDatos() {
        File dataDir = new File("./data/mascotasData.json");

        if (dataDir.exists()) {
            String jsonString = null;
            try {
                jsonString = FileUtils.readFileToString(new File("./data/mascotasData.json"), "UTF-8");
            } catch (IOException ex) {
                Logger.getLogger(userMainForm.class.getName()).log(Level.SEVERE, null, ex);
            }

            System.out.println(jsonString);

            Gson gson = new Gson();

            mascotasArray = gson.fromJson(jsonString, mascotaArray.class);
        } else {
            mascotasArray = new mascotaArray();
        }
    }

    public void guardarDatos() {
        File folder = new File("./data");

        //Convertimos los datos a JSON
        String json = new Gson().toJson(mascotasArray);

        //Comprobamos si la carpeta data existe
        if (!folder.exists()) {
            folder.mkdir();
        }

        //Guardamos los archivos
        File file = new File("./data/mascotasData.json");
        try ( PrintStream out = new PrintStream(new FileOutputStream(file))) {
            out.print(json);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(userMainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_agregar;
    private javax.swing.JButton btn_citas;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_inyecciones;
    private javax.swing.JButton btn_mascotas;
    private javax.swing.JButton btn_modificar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_welcome;
    private javax.swing.JTable tableMain;
    // End of variables declaration//GEN-END:variables
}
